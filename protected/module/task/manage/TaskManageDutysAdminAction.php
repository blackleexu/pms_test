<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/13
 * Time: 12:08
 */

namespace module\task\manage;


use CC\action\ListAction;
use CC\action\listHandler\AdditionDataListBeforeHandler;
use CC\action\listHandler\MultiAdditionDataListBeforeHandler;
use CC\util\common\widget\listColumn\Column;
use CC\util\common\widget\listColumn\ITableViewCreator;
use CC\util\common\widget\widget\buttons\ButtonWidget;
use CRequest;
use module\project\manage\enum\DutyTypeEnum;
use module\project\user\columnValueSetter\ProjectUserFormatColumnValueSetter;


class TaskManageDutysAdminAction extends ListAction implements ITableViewCreator
{
    protected function getTable()
    {
        return 'project';
    }

    public function getIsLayout()
    {
        return false; // TODO: Change the autogenerated stub
    }

    /**
     * @return  Column[]
     */
    public function createListColumns(array $list)
    {
        return [
            new Column('项目名称','name'),
            new Column('项目经理','pm_uname'),
            new Column('项目成员','user', new ProjectUserFormatColumnValueSetter($list))
        ];
    }



    protected function onListBefore(&$list)
    {
        return [
            new MultiAdditionDataListBeforeHandler(
                'users',
                ['table' => 'project', 'field' => 'id'],
                ['table' => 'project_user', 'intermediate_field' => 'project_id', 'target_field' => 'uid',
                    'intermediate_table_map' => ['is_main' => 'is_main', 'pro_func' => 'pro_func']],
                ['table' => 'user', 'tartget_table_map' => ['name' => 'name','id' => 'id','dept_name' => 'dept_id']]
            ),
            new AdditionDataListBeforeHandler('user','pm_uid',['pm_uname' => 'name']),
            new AdditionDataListBeforeHandler('user','pm_uid2',['pm_uname2' => 'name']),
        ];
    }

    /**
     * @return IFilter[]
     */
    public function createListFilters()
    {
        return [];
    }




    /**
     * @return  ButtonWidget[] | Closure[] | false
     */
    public function createOperateButtons(array $list)
    {
        return false;// TODO: Implement createOperateButtons() method.
    }
}
